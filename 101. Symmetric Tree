https://leetcode.com/problems/symmetric-tree/

/**
* Definition for a binary tree node.
* struct TreeNode {
* int val;
* TreeNode *left;
* TreeNode *right;
* TreeNode(int x) : val(x), left(NULL), right(NULL) {}
* };
*/
class Solution {
public:

	bool check(TreeNode* root1, TreeNode* root2) {
		if (!root1 && !root2) {
			return 1;
		}
		else if (!root1 || !root2) {
			return 0;
		}
		return (root1->val == root2->val && check(root1->right, root2->left) && check(root1->left, root2->right));
	}

	bool isSymmetric(TreeNode* root) {
		if (!root) 
			return 1;
		
        TreeNode* root1 = NULL;
		TreeNode* root2 = NULL;
        
		if (root->right) root1 = root->right;
		if (root->left) root2 = root->left;
		return check(root1, root2);
	}
};
