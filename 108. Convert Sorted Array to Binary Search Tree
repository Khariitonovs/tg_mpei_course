https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution
{
public:
	TreeNode* sortedArrayToBSTHelper(int* arr, int start, int end)
	{
		if (start <= end)
		{
			int len = end - start;
			int mid = start + len / 2;

			TreeNode* root = new TreeNode(arr[mid]);
			root->left = sortedArrayToBSTHelper(arr, start, mid - 1);
			root->right = sortedArrayToBSTHelper(arr, mid + 1, end);
			return root;
		}
		else
			return NULL;
	};

	TreeNode* sortedArrayToBST(vector<int> &num)
	{
		if (num.empty())
			return NULL;
		int arr[num.size()];
		for (int i = 0; i < num.size(); i++)
		{
			arr[i] = num[i];
		}
		return sortedArrayToBSTHelper(arr, 0, num.size() - 1);
	};
};
